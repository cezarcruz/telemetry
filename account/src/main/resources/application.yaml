server:
  port: 8081

spring:
  application:
    name: account-api
  data:
    mongodb:
      database: account
  cloud:
    function:
      definition: consumerEventsListener
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          autoCreateTopics: true
          producer-properties:
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
        deserializationExceptionHandler: logAndContinue
        bindings:
          consumerEventsListener-in-0:
            consumer:
              startOffset: latest
              resetOffsets: false
              enabledDlq: true
              dlqName: consumer-events-dlq
      bindings:
        consumerEventsListener-in-0:
          destination: consumer-events
          contentType: application/json
          group: account-application
      default-binder: kafka

#  kafka:
#    consumer:
#      auto-offset-reset: earliest
#      bootstrap-servers: localhost:9092
#      group-id: group-id
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: '*'
#    producer:
#      bootstrap-servers: localhost:9092
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

logging:
  config: classpath:logback-spring.xml

management:
  tracing:
    enabled: true
    propagation:
      type: B3
    sampling:
      probability: 1.0
    baggage:
      correlation:
        enabled: true
